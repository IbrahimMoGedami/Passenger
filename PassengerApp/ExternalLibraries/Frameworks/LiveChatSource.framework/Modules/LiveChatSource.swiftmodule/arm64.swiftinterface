// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.1.2 effective-4.2 (swiftlang-1100.0.278 clang-1100.0.33.9)
// swift-module-flags: -target arm64-apple-ios9.0 -enable-objc-interop -enable-library-evolution -swift-version 4.2 -enforce-exclusivity=checked -O -module-name LiveChatSource
import Foundation
@_exported import LiveChatSource
import Swift
import UIKit
import WebKit
@objc public protocol LiveChatDelegate : ObjectiveC.NSObjectProtocol {
  @objc optional func received(message: LiveChatSource.LiveChatMessage)
  @objc optional func handle(URL: Foundation.URL)
  @objc optional func chatPresented()
  @objc optional func chatDismissed()
}
@objc public class LiveChat : ObjectiveC.NSObject {
  @objc public static var licenseId: Swift.String? {
    @objc get
    @objc set
  }
  @objc public static var groupId: Swift.String? {
    @objc get
    @objc set
  }
  @objc public static var name: Swift.String? {
    @objc get
    @objc set
  }
  @objc public static var email: Swift.String? {
    @objc get
    @objc set
  }
  @objc public static var allCustomVariables: Swift.Dictionary<Swift.String, Swift.String>?
  @objc weak public static var delegate: LiveChatSource.LiveChatDelegate? {
    @objc get
    @objc set
  }
  @objc public static var isChatPresented: Swift.Bool {
    @objc get
  }
  @objc public static var unreadMessagesCount: Swift.Int {
    @objc get
  }
  @objc public class func setVariable(withKey key: Swift.String, value: Swift.String)
  @objc public class func presentChat(animated: Swift.Bool = true, completion: ((Swift.Bool) -> Swift.Void)? = nil)
  @objc public class func dismissChat(animated: Swift.Bool = true, completion: ((Swift.Bool) -> Swift.Void)? = nil)
  @objc public class func clearSession()
  @objc override dynamic public init()
  @objc deinit
}
@objc public class LiveChatMessage : ObjectiveC.NSObject {
  @objc final public let id: Swift.String
  @objc final public let text: Swift.String
  @objc final public let date: Foundation.Date
  @objc final public let authorName: Swift.String
  @objc final public let rawMessage: Foundation.NSDictionary
  @objc override dynamic public init()
  @objc deinit
}
extension UIImage {
  convenience public init?(color: UIKit.UIColor, size: CoreGraphics.CGSize = CGSize(width: 1, height: 1))
}
